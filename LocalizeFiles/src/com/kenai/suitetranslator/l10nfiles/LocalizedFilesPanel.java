package com.kenai.suitetranslator.l10nfiles;

import java.io.IOException;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.table.TableColumnModel;

import org.netbeans.api.project.Project;
import org.netbeans.spi.project.ui.support.ProjectCustomizer.Category;

import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;

import com.kenai.suitetranslator.l10nfiles.ResourceManagementFile.ResourceFilesTableModel;

/**
 *
 * @author hof
 */
public class LocalizedFilesPanel extends javax.swing.JPanel
{
  private static final long serialVersionUID = 9142020881117020705L;
  private Lookup rootContext;
  private static final int CHECKBOX_WIDTH =
      new javax.swing.JCheckBox().getWidth();
  private Category category;

  /** Creates new form LocalizedFilesPanel */
  public LocalizedFilesPanel()
  {
    initComponents();
  }

  @Override
  public void addNotify()
  {
    if(rootContext != null)
    {
      Project project = rootContext.lookup(Project.class);
      if(project != null)
      {
        //
        ResourceManagementFile rmf = new ResourceManagementFile(project);
        this.resourceFiles.setModel(rmf.createTableModel());
        //Breitendefinition "entliehen" aus Klasse
        //org.netbeans.modules.apisupport.project.ui.customizer
        TableColumnModel columnModel = this.resourceFiles.getColumnModel();
        columnModel.getColumn(0).setMaxWidth(CHECKBOX_WIDTH + 20);
      }
    }
    super.addNotify();
  }

  public void store()
  {
    ResourceFilesTableModel model =
        (ResourceFilesTableModel)this.resourceFiles.getModel();
    ResourceManagementFile rmf = model.getManager();
    if(cbUseLocalization.isSelected())
    {
      try
      {
        rmf.store();
      }
      catch(IOException ex)
      {
        Exceptions.printStackTrace(ex);
      }
    }
    else
    {
      rmf.clearList();
    }
  }

  /** This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    cbUseLocalization = new javax.swing.JCheckBox();
    javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
    excludePattern = new javax.swing.JTextField();
    javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
    resourceFiles = new javax.swing.JTable();

    org.openide.awt.Mnemonics.setLocalizedText(cbUseLocalization, NbBundle.getMessage(LocalizedFilesPanel.class, "LocalizedFilesPanel.cbUseLocalization.text")); // NOI18N
    cbUseLocalization.setEnabled(false);
    cbUseLocalization.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        cbUseLocalizationActionPerformed(evt);
      }
    });

    org.openide.awt.Mnemonics.setLocalizedText(jLabel1, NbBundle.getMessage(LocalizedFilesPanel.class, "LocalizedFilesPanel.jLabel1.text")); // NOI18N

    excludePattern.setColumns(20);

    resourceFiles.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
    resourceFiles.setEnabled(cbUseLocalization.isSelected());
    resourceFiles.setShowVerticalLines(false);
    resourceFiles.setTableHeader(null);
    jScrollPane1.setViewportView(resourceFiles);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(cbUseLocalization)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jScrollPane1)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(excludePattern)))
            .addContainerGap())))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(cbUseLocalization)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jScrollPane1)
        .addGap(15, 15, 15)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(excludePattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );
  }// </editor-fold>//GEN-END:initComponents

  private void cbUseLocalizationActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbUseLocalizationActionPerformed
  {//GEN-HEADEREND:event_cbUseLocalizationActionPerformed
    resourceFiles.setEnabled(cbUseLocalization.isSelected());
  }//GEN-LAST:event_cbUseLocalizationActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  javax.swing.JCheckBox cbUseLocalization;
  javax.swing.JTextField excludePattern;
  javax.swing.JTable resourceFiles;
  // End of variables declaration//GEN-END:variables

  void setContext(Category category, Lookup context)
  {
    this.category = category;
    this.rootContext = context;

    category.setStoreListener(new ActionListener()
    {
      @Override
      public void actionPerformed(ActionEvent e)
      {
        store();
      }

    });
  }

}
